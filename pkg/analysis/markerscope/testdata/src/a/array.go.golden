/*
Copyright 2025 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
package a

// +kubebuilder:validation:MinItems=1
// +kubebuilder:validation:MaxItems=10
// +kubebuilder:validation:UniqueItems=true
type StringArray []string

// +kubebuilder:validation:MinItems=0
type IntegerArray []int32

// +kubebuilder:validation:MaxItems=100
type BooleanArray []bool

// +kubebuilder:validation:MinItems=5 // want `marker "kubebuilder:validation:MinItems": marker should be declared on the type definition of FieldMarkerOnNamedArray instead of the field`
type FieldMarkerOnNamedArray []string

// Type definitions with invalid markers
type InvalidArrayMarkerOnStringType string

type InvalidArrayMarkerOnMapType map[string]string

type ArrayMarkersFieldTest struct {
	// Valid: MinItems marker on array field
	// +kubebuilder:validation:MinItems=1
	ValidMinItems []string `json:"validMinItems"`

	// Valid: MaxItems marker on array field
	// +kubebuilder:validation:MaxItems=10
	ValidMaxItems []string `json:"validMaxItems"`

	// Valid: UniqueItems marker on array field
	// +kubebuilder:validation:UniqueItems=true
	ValidUniqueItems []string `json:"validUniqueItems"`

	// Valid: All array markers combined on array field
	// +kubebuilder:validation:MinItems=1
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:UniqueItems=true
	ValidAllArrayMarkers []string `json:"validAllArrayMarkers"`

	// Invalid: MinItems marker on string field
	InvalidMinItemsOnString string `json:"invalidMinItemsOnString"`

	// Invalid: MaxItems marker on map field
	InvalidMaxItemsOnMap map[string]string `json:"invalidMaxItemsOnMap"`

	// Invalid: UniqueItems marker on integer field
	InvalidUniqueItemsOnInteger int32 `json:"invalidUniqueItemsOnInteger"`

	// Invalid: MinItems marker on boolean field
	InvalidMinItemsOnBoolean bool `json:"invalidMinItemsOnBoolean"`

	// Invalid: MaxItems marker on struct field
	InvalidMaxItemsOnStruct ArrayItem `json:"invalidMaxItemsOnStruct"`

	// Valid: Using named array type with markers
	ValidNamedArrayType StringArray `json:"validNamedArrayType"`

	// Valid: Using named array type (IntegerArray)
	ValidIntegerArrayType IntegerArray `json:"validIntegerArrayType"`

	// Valid: Using named array type (BooleanArray)
	ValidBooleanArrayType BooleanArray `json:"validBooleanArrayType"`

	// Invalid: Field marker on named array type (should use type definition)
	InvalidFieldMarkerOnNamedArray FieldMarkerOnNamedArray `json:"invalidFieldMarkerOnNamedArray"`

	// Invalid: Using invalid named type with array marker
	InvalidNamedStringType InvalidArrayMarkerOnStringType `json:"invalidNamedStringType"`

	// Invalid: Using invalid named type with array marker
	InvalidNamedMapType InvalidArrayMarkerOnMapType `json:"invalidNamedMapType"`
}

type ArrayItem struct {
	Name string `json:"name"`
}
